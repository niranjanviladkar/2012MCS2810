# by default `make` executes whole process
# as if object information is ignored
#
# If you want to include object information also,
# run `make obj`
#
all: distclean aap
obj: distclean aapobj

make_train: make_db.py
	./make_db.py train noobj

make_test: make_db.py
	./make_db.py test noobj

mln_learn: make_train make_test mln_learnwts.sh 
	./mln_learnwts.sh

mln_infer: mln_learn make_test mln_infer.sh
	./mln_infer.sh

aap: make_test mln_infer aap.py
	./aap.py



make_trainobj: make_db.py
	./make_db.py train obj

make_testobj: make_db.py
	./make_db.py test obj

mln_learnobj: make_trainobj make_testobj mln_learnwts.sh 
	./mln_learnwts.sh

mln_inferobj: mln_learnobj make_testobj mln_infer.sh
	./mln_infer.sh

aapobj: make_testobj mln_inferobj aap.py
	./aap.py




appendTrueValue: appendTrueVal.pl make_appendTrueVal.sh outputOfInfer.mln append_test.db
	./make_appendTrueVal.sh

auc: make_auc.sh outputOfAppend
	./make_auc.sh

outputOfInfer.mln: mln_infer
outputOfAppend: appendTrueValue
append_test.db: make_test
output.mln: mln_learn
train.db: make_train
test.db: make_test

clean:
	rm -rf output*

distclean: clean
	rm -rf *.db rules.mln

cleanAndRun: clean auc
distcleanAndRun: distclean auc
